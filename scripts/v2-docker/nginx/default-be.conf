server {
    listen 443 ssl;
    server_name springboot.dev-leafresh.app;

    ssl_certificate /etc/letsencrypt/live/springboot.dev-leafresh.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/springboot.dev-leafresh.app/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;

    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /api/chatbot/recommendation/ {
        proxy_pass http://localhost:8080;
	proxy_read_timeout 300s;
        ### SSE 특화 설정 ###
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;

        ### CORS 설정 (요청/응답 헤더) ###
        # if ($request_method = OPTIONS) {
    	#     add_header 'Access-Control-Allow-Origin' '*' always;
    	#     add_header 'Access-Control-Allow-Credentials' 'true' always;
    	#     add_header 'Access-Control-Allow-Methods' 'GET,OPTIONS' always;
    	#     add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;
    	#     add_header 'Access-Control-Max-Age' 1728000 always;
    	#     return 204;
  	# }

  	# add_header 'Access-Control-Allow-Origin' '*' always;
  	# add_header 'Access-Control-Allow-Credentials' 'true' always;
  	# add_header 'Vary' 'Origin' always;
    }

}

server {
    listen 80;
    server_name springboot.dev-leafresh.app;

    # HTTP 요청을 HTTPS로 리디렉션
    return 301 https://$host$request_uri;
}

