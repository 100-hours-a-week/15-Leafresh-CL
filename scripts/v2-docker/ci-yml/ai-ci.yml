name: AI Project CI
 
on:
  push:
    branches:
      - develop
      - main
    paths:
      - 'Image/**'
      - 'Text/**'
  
  pull_request:
    branches:
      - develop
      - main
    paths:
      - '.github/workflows/**'
  
  workflow_dispatch:
    inputs:
      target_test:
        description: '수행할 대상(AI 프로젝트)을 선택하세요'
        required: true
        type: choice
        options:
          - kellyn-dev
          - mac-dev
          - kellyn-prod
          - mac-prod

jobs:

  unit-test-kellyn:
    name: Unit Test - AI-kellyn
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.target_test == 'kellyn-dev'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Image
    env:
      GOOGLE_CREDENTIAL_JSON_B64: ${{ secrets.GOOGLE_CREDENTIAL_JSON_B64 }}
      ENV_LOCAL: ${{ secrets.ENV_LOCAL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Write .env file
        run: echo "$ENV_LOCAL" > .env

      - name: Load .env variables
        run: |
          set -a
          source .env
          set +a

      - name: Decode credentials.json from base64
        run: |
          echo "$GOOGLE_CREDENTIAL_JSON_B64" | base64 -d > credentials.json
          jq . credentials.json > /dev/null

      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/credentials.json" >> $GITHUB_ENV

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Unit Test
        run: python verify_unit_test.py

  integration-test-kellyn:
    name: Integration Test - AI-kellyn
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.target_test == 'kellyn-prod'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Image
    env:
      GOOGLE_CREDENTIAL_JSON_B64: ${{ secrets.GOOGLE_CREDENTIAL_JSON_B64 }}
      ENV_LOCAL: ${{ secrets.ENV_LOCAL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Write .env file
        run: echo "$ENV_LOCAL" > .env

      - name: Load .env variables
        run: |
          set -a
          source .env
          set +a

      - name: Decode credentials.json from base64
        run: |
          echo "$GOOGLE_CREDENTIAL_JSON_B64" | base64 -d > credentials.json
          jq . credentials.json > /dev/null

      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/credentials.json" >> $GITHUB_ENV

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Run Uvicorn in Background
        run: |
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 --reload --env-file .env > uvicorn.log 2>&1 &
          sleep 30

      - name: Run Integration Test Script
        run: |
          chmod +x verify_curl_test.sh
          ./verify_curl_test.sh

      - name: Check Uvicorn Log
        if: failure()
        run: cat uvicorn.log

      - name: Stop Uvicorn
        run: pkill -f "uvicorn"

  build-dev-kellyn:
    name: Build Dev - AI-kellyn
    needs: unit-test-kellyn
    if: |
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.target_test == 'kellyn-dev'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Image
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: ./Image
          file: ./Image/Dockerfile
          push: true
          tags: jchanho99/ai-image-dev:latest
          cache-from: type=gha,scope=build-ai-kellyn
          cache-to: type=gha,mode=max,scope=build-ai-kellyn

  build-prod-kellyn:
    name: Build Prod - AI-kellyn
    needs: integration-test-kellyn
    if: |
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.target_test == 'kellyn-prod'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Image
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: ./Image
          file: ./Image/Dockerfile
          push: true
          tags: jchanho99/ai-image-prod:latest
          cache-from: type=gha,scope=build-ai-kellyn
          cache-to: type=gha,mode=max,scope=build-ai-kellyn

  unit-test-mac:
    name: Unit Test - AI-mac
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.target_test == 'mac-dev'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Text/LLM
    env:
      GOOGLE_CREDENTIAL_JSON_B64: ${{ secrets.GOOGLE_CREDENTIAL_JSON_B64 }}
      ENV_LOCAL: ${{ secrets.ENV_LOCAL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Write .env file
        run: echo "$ENV_LOCAL" > .env
      - name: Load .env variables
        run: |
          set -a
          source .env
          set +a
      - name: Decode credentials.json from base64
        run: |
          echo "$GOOGLE_CREDENTIAL_JSON_B64" | base64 -d > credentials.json
          jq . credentials.json > /dev/null
      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/credentials.json" >> $GITHUB_ENV
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Run Unit Test
        run: python censorship_unit_test.py

  integration-test-mac:
    name: Integration Test - AI-mac
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.target_test == 'mac-prod'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Text/LLM
    env:
      GOOGLE_CREDENTIAL_JSON_B64: ${{ secrets.GOOGLE_CREDENTIAL_JSON_B64 }}
      ENV_LOCAL: ${{ secrets.ENV_LOCAL }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Write .env file
        run: echo "$ENV_LOCAL" > .env
      - name: Load .env variables
        run: |
          set -a
          source .env
          set +a
      - name: Decode credentials.json from base64
        run: |
          echo "$GOOGLE_CREDENTIAL_JSON_B64" | base64 -d > credentials.json
          jq . credentials.json > /dev/null
      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/credentials.json" >> $GITHUB_ENV
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Run Uvicorn in Background
        run: |
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 --reload --env-file .env > uvicorn.log 2>&1 &
          sleep 30
      - name: Run Integration Test Script
        run: |
          chmod +x censorship_curl_test.sh
          ./censorship_curl_test.sh
      - name: Check Uvicorn Log
        if: failure()
        run: cat uvicorn.log
      - name: Stop Uvicorn
        run: pkill -f "uvicorn"

  build-dev-mac:
    name: Build Dev - AI-mac
    needs: unit-test-mac
    if: |
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.target_test == 'mac-dev'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Text/LLM
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: ./Text/LLM
          file: ./Text/LLM/Dockerfile
          push: true
          tags: jchanho99/ai-text-dev:latest
          cache-from: type=gha,scope=build-ai-mac
          cache-to: type=gha,mode=max,scope=build-ai-mac

  build-prod-mac:
    name: Build Prod - AI-mac
    needs: integration-test-mac
    if: |
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.target_test == 'mac-prod'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Text/LLM
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: ./Text/LLM
          file: ./Text/LLM/Dockerfile
          push: true
          tags: jchanho99/ai-text-prod:latest
          cache-from: type=gha,scope=build-ai-mac
          cache-to: type=gha,mode=max,scope=build-ai-mac
